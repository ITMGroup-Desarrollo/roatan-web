---
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer/Footer.astro";
import Logo from "../../../components/port-experience/Logo.astro";
import Menu from "../../../components/Headers/MenuBlog.astro";
import WaveObserver from "../../../components/js/WaveObserver.jsx";
import "../../../assets/css/port-experience.css";
import type { APIContext } from "astro";

//@ts-ignore
const { lang, slug } = Astro.params;

const filePath = path.resolve(`./src/ports/${lang}/${slug}.md`);
const fileContent = fs.readFileSync(filePath, "utf-8");
const { data, content } = matter(fileContent);
export const prerender = true;
export async function getStaticPaths(): Promise<APIContext["params"][]> {
  const fs = await import("fs");
  const path = await import("path");

  const langs = ["es", "en"];
  const paths: APIContext["params"][] = [];

  for (const lang of langs) {
    const dir = path.resolve(`./src/ports/${lang}`);
    const files = fs.readdirSync(dir);

    for (const filename of files) {
      const slug = filename.replace(".md", "");

      paths.push({
        //@ts-ignore
        params: { lang, slug },
      });
    }
  }

  return paths;
}
---

<Layout lang={lang}>
  <Menu lang={lang} />

  <div class="w-screen py-8 flex flex-col bg-white justify-center">
    <WaveObserver client:visible />
    <Logo content={content} logo={data.logo} />
    
    <div class="w-4/5 md:w-3/4 px-4 my-12 self-center md:mx-auto">
      <div
        class="
          grid gap-4
          grid-cols-[repeat(auto-fill,_minmax(200px,_1fr))]
          auto-rows-[180px]
          md:grid-cols-12 md:auto-rows-[150px]
          xl:auto-rows-[200px]
        "
      >
        {
          data.gridgallery?.map((img, index) => {
            let sizeClass = "";
            let objectPositionClass = "";

            switch (img.size) {
              case "sm":
                sizeClass = "col-span-6 md:col-span-3 row-span-2";
                break;
              case "md":
                sizeClass = "col-span-6 md:col-span-4 row-span-2";
                break;
              case "lg":
                sizeClass = "col-span-6 row-span-2";
                objectPositionClass = "object-center";
                break;
              case "xl":
                sizeClass = "col-span-6 row-span-3 md:row-span-4";
                break;
              case "long":
                sizeClass = "col-span-6 row-span-2 md:col-span-9";
                break;
              default:
                sizeClass = "col-span-1 row-span-1";
            }

            return (
              <div
                class={`overflow-hidden rounded-2xl ${sizeClass}`}
              >
                <img
                  src={img.url}
                  alt={img.alt ?? `Imagen ${index + 1}`}
                  loading="lazy"
                  class={`w-full h-full object-cover transition-transform duration-300 hover:scale-105 ${objectPositionClass}`}
                />
              </div>
            );
          })
        }
      </div>
    </div>
  </div>

  <Footer lang={lang} videoFile="fondo-footer-blanco.mp4" />
</Layout>

