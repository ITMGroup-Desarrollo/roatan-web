---
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer/Footer.astro";
import Menu from "../../../components/Headers/MenuBlog.astro";
import "../../../assets/css/blog.css";
import type { APIContext } from "astro";
import BlogSingleSwiper from "../../../components/js/BlogSingleSwiper.jsx";

//@ts-ignore
const { lang, slug } = Astro.params;

const filePath = path.resolve(`./src/posts/${lang}/${slug}.md`);
const fileContent = fs.readFileSync(filePath, "utf-8");
const { data, content } = matter(fileContent);
const postsDir = path.resolve(`./src/posts/${lang}`);
const allFiles = fs.readdirSync(postsDir);

const allPosts = allFiles.map((filename) => {
  const file = fs.readFileSync(path.join(postsDir, filename), "utf-8");
  const { data } = matter(file);
  return {
    ...data,
    slug: data.slug || filename.replace(".md", ""),
    date: new Date(data.date),
    title: data.title,
    image: data.image,
    excerpt: data.excerpt,
  };
});

// Ordena por fecha descendente y excluye el actual
const recentPosts = allPosts
  .filter((post) => post.slug !== slug)
  .sort((a, b) => b.date.getTime() - a.date.getTime())
  .slice(0, 3);

// üëá Esto debe ir AQU√ç
const contentBlocks = content.split("<!--split-->");

export async function getStaticPaths(): Promise<APIContext["params"][]> {
  const fs = await import("fs");
  const path = await import("path");

  const langs = ["es", "en"];
  const paths: APIContext["params"][] = [];

  for (const lang of langs) {
    const dir = path.resolve(`./src/posts/${lang}`);
    const files = fs.readdirSync(dir);

    for (const filename of files) {
      const slug = filename.replace(".md", "");

      paths.push({
        //@ts-ignore
        params: { lang, slug },
      });
    }
  }

  return paths;
}
---

<Layout lang={lang}>
  <Menu lang={lang} />
  <article
    class="Article-container bg-white w-screen flex flex-col items-center justify-center"
  >
    <div class="w-full px-8 md:px-0 md:w-3/4 md:-0">
      <h2
        class="text-5xl md:text-7xl text-center pt-8 text-[var(--primary-color)] "
        set:html={data.title}
      >
        
      </h2>
      <div class="first-text-container text-justify text-2xl pt-8">
        <div set:html={contentBlocks[0]} />
      </div>
      <div class="gallery-container grid gap-[2vh] pt-8">
        {
          data.gridgallery &&
            Array.isArray(data.gridgallery) &&
            data.gridgallery.map((img, index) => (
              <div class="rounded-xl" style={`grid-area:image-${index + 1}`}>
                <img
                  class={`${index === 0 ? "h-[28vh] md:h-[76vh]" : "h-[13vh] md:h-[37vh]"} w-full rounded-xl object-cover object-center`}
                  src={img.url}
                  alt={img.alt ?? `Imagen${index + 1}`}
                />
              </div>
            ))
        }
      </div>
      <div class="second-text-container text-2xl text-justify pt-8">
        <div set:html={contentBlocks[1]} />
      </div>
      <div
        class="second-gallery-container flex flex-col  gap-4 pt-8"
      >
        {
          data.gallery &&
            Array.isArray(data.gallery) &&
            data.gallery.map((img, index) => (
              <div class="rounded-xl">
                <img
                  class={`h-[25vh] md:h-[75vh] w-full rounded-xl object-cover object-center `}
                  src={img.url}
                  alt={img.alt ?? `Imagen${index + 1}`}
                />
              </div>
            ))
        }
      </div>
    </div>
    {
      recentPosts.length >= 1 && (
        <section class="w-full px-8 md:px-0 md:w-3/4 py-16">
          <h3 class="text-5xl md:text-7xl font-bold text-center text-[var(--primary-color)] py-8 mb-8">
            {lang === "es" ? "PODR√çA INTERESARTE" : "YOU MAY ALSO LIKE"}
          </h3>
          <div class="md:hidden">
            <BlogSingleSwiper
              client:load
              recentPosts={recentPosts}
              lang={lang}
            />
          </div>

          <div
            class={`hidden  gap-6 ${
              recentPosts.length === 1
                ? "md:flex md:justify-center"
                : recentPosts.length === 2
                  ? "md:grid md:grid-cols-2"
                  : "md:grid md:grid-cols-3"
            }`}
          >
            {recentPosts.map((post) => (
              <a
                href={`/${lang}/blog/${post.slug}`}
                class={`${recentPosts.length === 1 ? "md:w-[40vw]" : "md:w-auto"} bg-gray-50 rounded-xl shadow hover:shadow-lg transition duration-300 flex flex-col overflow-hidden`}
              >
                <img
                  src={post.image.url}
                  alt={post.image.alt ?? post.title}
                  class="w-full object-cover"
                />
                <div class="p-4 flex flex-col justify-between flex-grow ">
                  <h4 class="text-4xl font-bold mb-2">{post.title}</h4>
                  <p
                    class="text-2xl text-justify text-gray-700 mb-4"
                    set:html={post.excerpt}
                  />
                  <span class="text-[var(--primary-color)] md:text-2xl border-2 border-[var(--primary-color)] self-start p-2 rounded-lg w-fit uppercase text-base font hover:bg-white hover:border-white hover:text-[var(--darkblue-color)]">
                    {lang === "es" ? "Leer m√°s" : "Read more"} &raquo;
                  </span>
                </div>
              </a>
            ))}
          </div>
        </section>
      )
    }
  </article>

  <Footer lang={lang} videoFile="fondo-footer-blanco.mp4" />
  <style>
    .swiper-pagination {
      bottom: 0px !important;
      position: absolute !important;
      text-align: center;
      width: 100%;
      z-index: 10;
    }
  </style>
</Layout>
